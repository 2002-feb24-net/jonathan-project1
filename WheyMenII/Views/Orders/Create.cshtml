@model WheyMen.Domain.Model.Order

@{
    ViewData["Title"] = "Create";
}

<h1>Start Order:</h1>

<h4>Customer Info</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Cust.Username" class="control-label">Username</label>
                <input asp-for="Cust.Username" class="form-control" placeholder="Username" name="Username">
                <span asp-validation-for="Cust.Username" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Cust.Pwd" class="control-label">Password</label>
                <input asp-for="Cust.Pwd" class="form-control" placeholder="Password" name="Password">
            </div>
            @if (!ViewData.ModelState.IsValid && ViewData.ModelState["QuantityError"].Errors.Count > 0)
            {
                <div class="my-alert">
                    <strong>Error!</strong> @ViewData.ModelState["QuantityError"].Errors.First().ErrorMessage
                </div>
            }
            <div class="form-group">
                <label asp-for="LocId" class="control-label">Location Name</label>
                <select asp-for="LocId" class="form-control" asp-items="ViewBag.LocId"></select>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
